# https://riggaroo.dev/using-github-actions-to-automate-our-release-process/#:~:text=Now%20to%20actually%20run%20this%20Action%3A%20Log%20onto,name%20and%20number%20of%20the%20release%20to%20create.

name: Publish Release

on: 
  push:
    tags:
      - '*'

jobs:
  build:

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: src\CosmosDbExplorer.sln                       # Replace with your solution name, i.e. MyWpfApp.sln.
      Test_Project_Path: src\CosmosDbExplorer.Tests\CosmosDbExplorer.Tests.csproj  # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.
      # Wap_Project_Directory: your-wap-project-directory-name    # Replace with the Wap project directory relative to the solution, i.e. MyWpfApp.Package.
      # Wap_Project_Path: your-wap-project-path                   # Replace with the path to your Wap project, i.e. MyWpf.App.Package\MyWpfApp.Package.wapproj.

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Setup NuGet
      uses: nuget/setup-nuget@v1
      with: 
        nuget-version: '5.7.x'

    - name: Restore NuGet Packages
      run: nuget restore $env:Solution_Name

    - name: Build Application
      run: msbuild $env:Solution_Name /p:Configuration=Release

    - name: Zip Release folder
      uses: "papeloto/action-zip@v1"
      with:
        files: src\CosmosDbExplorer\bin\Release\
        dest: CosmosDbExplorer.zip

    - name: Automatic Release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: true
        files: |
          *.zip

    # - name: Upload build artifacts
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: CosmosDbExplorer.${{ github.event.inputs.versionName }}
    #     path: src\CosmosDbExplorer\bin\Release\

